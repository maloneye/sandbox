

 <MudPaper   Class="rounded mud-background-gray px-4 py-5 ma-7 object-center " Elevation="100">
        <MudTextField @bind-Value="@SelectedHousemate.Name" Label="Name" Variant="Variant.Text"></MudTextField>
        <MudDatePicker Label="DOB" @bind-Date="@SelectedHousemate.DOB" />
    <EmojiPicker Content="@SelectedHousemate.Emoji" EmojiSelected="OnEmojiSelected"></EmojiPicker>
        <MudButton OnClick="@SaveEdit" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Save</MudButton>
    <MudButton OnClick="@CloseRequested" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Close</MudButton>
    </MudPaper>




<style>
    .center-screen {
        width: 100px;
        height: 75%;
        padding-top: 20px;
        padding-right: 10%;
        padding-bottom: 50px;
        padding-left: 10%;
        position: relative;
        justify-content: center;
        z-index:inherit+50;
    }
</style>

@code {
    [Parameter] public EventCallback<MouseEventArgs> SaveRequested { get; set; }

    [Parameter] public EventCallback<MouseEventArgs> CloseRequested { get; set; }

    private Housemate? _selectedHousemate;

    [Parameter]
    public Housemate? SelectedHousemate
    {
        get { return _selectedHousemate; }
        set {_selectedHousemate = value;}
    }


    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void OnEmojiSelected(string emoji)
    {
        SelectedHousemate.Emoji = emoji;
    }

    private async void SaveEdit()
    {
        await SaveRequested.InvokeAsync();
    }

}
